import{_ as s,c as a,o as i,a5 as t,bq as e,br as l,bs as p}from"./chunks/framework.DN4gDBKU.js";const m=JSON.parse('{"title":"React介绍","description":"","frontmatter":{},"headers":[],"relativePath":"前端/react/index.md","filePath":"前端/react/index.md","lastUpdated":1727190527000}'),n={name:"前端/react/index.md"},h=t('<h1 id="react介绍" tabindex="-1">React介绍 <a class="header-anchor" href="#react介绍" aria-label="Permalink to &quot;React介绍&quot;">​</a></h1><p><code>目标任务:</code> 了解什么是React以及它的特点</p><p><strong>React是什么</strong></p><p>一个专注于构建用户界面的 JavaScript 库，和vue和angular并称前端三大框架，不夸张的说，react引领了很多新思想，世界范围内是最流行的js前端框架，最新版本已经到了18，加入了许多很棒的新特性</p><p>​ React英文文档（<a href="https://reactjs.org/%EF%BC%89" target="_blank" rel="noreferrer">https://reactjs.org/）</a></p><p>​ React中文文档 （<a href="https://zh-hans.reactjs.org/%EF%BC%89" target="_blank" rel="noreferrer">https://zh-hans.reactjs.org/）</a></p><p>​ React新文档（<a href="https://beta.reactjs.org/%EF%BC%89%EF%BC%88%E5%BC%80%E5%8F%91%E4%B8%AD" target="_blank" rel="noreferrer">https://beta.reactjs.org/）（开发中</a>....）</p><p><strong>React有什么特点</strong></p><p>1- 声明式UI（JSX）</p><p>写UI就和写普通的HTML一样，抛弃命令式的繁琐实现</p><p><img src="'+e+'" alt="img" loading="lazy"></p><p>2- 组件化</p><p>组件是react中最重要的内容，组件可以通过搭积木的方式拼成一个完整的页面，通过组件的抽象可以增加复用能力和提高可维护性</p><p><img src="'+l+'" alt="img" loading="lazy"></p><p>3- 跨平台</p><p>react既可以开发web应用也可以使用同样的语法开发原生应用（react-native），比如安卓和ios应用，甚至可以使用react开发VR应用，想象力空间十足，react更像是一个 <code>元框架</code> 为各种领域赋能</p><h1 id="环境初始化" tabindex="-1">环境初始化 <a class="header-anchor" href="#环境初始化" aria-label="Permalink to &quot;环境初始化&quot;">​</a></h1><p><code>目标任务:</code> 能够独立使用React脚手架创建一个react项目</p><h2 id="_1-使用脚手架创建项目" tabindex="-1">1. 使用脚手架创建项目 <a class="header-anchor" href="#_1-使用脚手架创建项目" aria-label="Permalink to &quot;1. 使用脚手架创建项目&quot;">​</a></h2><p><img src="'+p+`" alt="img" loading="lazy"></p><ul><li>打开命令行窗口</li><li>执行命令</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create-react-app</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> react-basic</span></span></code></pre></div><p>说明：</p><ol><li><ol><li>npx create-react-app 是固定命令，<code>create-react-app</code>是React脚手架的名称</li><li>react-basic表示项目名称，可以自定义，保持语义化</li><li>npx 命令会帮助我们临时安装create-react-app包，然后初始化项目完成之后会自自动删掉，所以不需要全局安装create-react-app</li></ol></li></ol><ul><li>启动项目</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">or</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span></span></code></pre></div><h2 id="_2-项目目录说明调整" tabindex="-1">2. 项目目录说明调整 <a class="header-anchor" href="#_2-项目目录说明调整" aria-label="Permalink to &quot;2. 项目目录说明调整&quot;">​</a></h2><ul><li>目录说明</li></ul><ol><li><ol><li><code>src</code> 目录是我们写代码进行项目开发的目录</li><li><code>package.json</code> 中俩个核心库：react 、react-dom</li></ol></li></ol><ul><li>目录调整</li></ul><ol><li><ol><li>删除src目录下自带的所有文件，只保留app.js根组件和index.js</li><li>创建index.js文件作为项目的入口文件，在这个文件中书写react代码即可</li></ol></li></ol><ul><li>入口文件说明</li></ul><div class="language-jsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> React </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;react&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ReactDOM </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;react-dom&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;./index.css&#39;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 引入根组件App</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> App </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;./App&#39;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 通过调用ReactDOM的render方法渲染App根组件到id为root的dom节点上</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ReactDOM.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">render</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">React.StrictMode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">App</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">React.StrictMode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getElementById</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;root&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div>`,33),r=[h];function k(c,d,o,g,E,F){return i(),a("div",null,r)}const u=s(n,[["render",k]]);export{m as __pageData,u as default};
