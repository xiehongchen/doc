import{_ as s,c as i,o as a,a5 as n}from"./chunks/framework.DN4gDBKU.js";const o=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"后端/node/node/npm和包.md","filePath":"后端/node/node/npm和包.md","lastUpdated":1721578329000}'),l={name:"后端/node/node/npm和包.md"},p=n(`<h2 id="npm和包" tabindex="-1">npm和包 <a class="header-anchor" href="#npm和包" aria-label="Permalink to &quot;npm和包&quot;">​</a></h2><h3 id="_1、什么是包" tabindex="-1">1、什么是包 <a class="header-anchor" href="#_1、什么是包" aria-label="Permalink to &quot;1、什么是包&quot;">​</a></h3><ul><li>Node.js 中的第三方模块叫做包</li></ul><h3 id="_2、包的作用" tabindex="-1">2、包的作用 <a class="header-anchor" href="#_2、包的作用" aria-label="Permalink to &quot;2、包的作用&quot;">​</a></h3><ul><li>由于Node.js的内置模块仅提供了一些底层API，导致在基于内置模块进行项目开发时，效率很低</li><li>包是基于内置模块封装出来的，提供了更高级、更方便的API，极大的提高了效率</li><li>包和内置模块的关系，相当于jQuery和浏览器内置API的关系</li></ul><h3 id="_3、npm" tabindex="-1">3、npm <a class="header-anchor" href="#_3、npm" aria-label="Permalink to &quot;3、npm&quot;">​</a></h3><ul><li>安装</li></ul><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Module</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Module</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	这个自动安装最新版本</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> express@2.2.1</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	#指定版本</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> express</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">          # 本地安装</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> express</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   	# 全局安装</span></span></code></pre></div><ul><li>卸载</li></ul><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> uninstall</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Module</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> uninstall</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> express</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	会从dependencies节点中删除</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> uninstall</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> express</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	#卸载全局包</span></span></code></pre></div><ul><li>更新</li></ul><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Module</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> express</span></span></code></pre></div><ul><li>搜索</li></ul><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> search</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Module</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> search</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> express</span></span></code></pre></div><ul><li>其他</li></ul><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查看指定包的详细信息</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> info</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">package-nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 列出当前项目中安装的所有包</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> list</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 列出当前项目中需要更新的包</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> outdated</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 检查当前项目中的依赖项是否存在安全漏洞</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> audit</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 发布自己开发的包到 npm 库中</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> publish</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 登录到 npm 账户</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> login</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 注销当前 npm 账户</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> logout</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 将本地模块链接到全局的 node_modules 目录下</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> link</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 用于列出所有的 npm 配置信息。执行该命令可以查看当前系统和用户级别的所有 npm 配置信息，以及当前项目的配置信息（如果在项目目录下执行该命令）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> list</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 用于获取当前 npm 配置中的 registry 配置项的值。registry 配置项用于指定 npm 包的下载地址，如果未指定，则默认使用 npm 官方的包注册表地址</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> registry</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 将 registry 配置项的值修改为指定的 &lt;registry-url&gt; 地址</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> registry</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> registry</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">registry-ur</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">l</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><h3 id="_4、包管理配置文件" tabindex="-1">4、包管理配置文件 <a class="header-anchor" href="#_4、包管理配置文件" aria-label="Permalink to &quot;4、包管理配置文件&quot;">​</a></h3><ul><li>npm规定，在项目根目录中，必须提供一个叫做 <code>package.json</code> 的包管理配置文件，用来记录与项目相关的一些配置信息</li><li>例如 <ul><li>项目的名称、版本号、描述等</li><li>项目中都用到了哪些包</li><li>哪些包只在开发期间会用到</li><li>哪些包在开发和部署时都需要用到</li></ul></li></ul><h4 id="创建package-json" tabindex="-1">创建package.json <a class="header-anchor" href="#创建package-json" aria-label="Permalink to &quot;创建package.json&quot;">​</a></h4><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	作用：在执行命令所处的目录中，快速新建</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> package.json</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span></span></code></pre></div><ul><li>项目文件夹的名称不能使用中文，不能有空格</li></ul><h4 id="dependencies节点" tabindex="-1">dependencies节点 <a class="header-anchor" href="#dependencies节点" aria-label="Permalink to &quot;dependencies节点&quot;">​</a></h4><ul><li>记录使用npm install 命令安装了哪些包</li></ul><p>如果有些包只在项目开发阶段用到，上线之后用不到，就把这些包放到devDependencies节点中</p><p>如果有些包在项目开发和上线阶段用到，就把这些包放到dependencies节点中</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	安装指定的包，并记录到</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> devDependencies</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 节点中</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 包名</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -D</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	等价于,完整写法</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	包名和-D顺序不重要</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 包名</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --save-dev</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>npm config set registry=https://registry.npm.taobao.org/</span></span></code></pre></div><h4 id="一次性安装所有的包" tabindex="-1">一次性安装所有的包 <a class="header-anchor" href="#一次性安装所有的包" aria-label="Permalink to &quot;一次性安装所有的包&quot;">​</a></h4><p>可以运行 <code>npm install</code> 或<code>npm i</code> 一次性安装所有的依赖包</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	执行npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 命令时，npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 包管理工具先读取</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> package.json</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 中的</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dependencies</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 节点</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	读取到记录的所有依赖包名称和版本号后，npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 包管理工具会把这些包一次性下载到项目中</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i</span></span></code></pre></div><h4 id="包的分类" tabindex="-1">包的分类 <a class="header-anchor" href="#包的分类" aria-label="Permalink to &quot;包的分类&quot;">​</a></h4><h5 id="_1-项目包" tabindex="-1">1.项目包 <a class="header-anchor" href="#_1-项目包" aria-label="Permalink to &quot;1.项目包&quot;">​</a></h5><p>那些被安装到项目的 node_modules 目录的包都是项目包</p><ul><li>开发依赖包 (devDependencies)</li><li>核心依赖包 (dependencies)</li></ul><h5 id="_2-全局包" tabindex="-1">2.全局包 <a class="header-anchor" href="#_2-全局包" aria-label="Permalink to &quot;2.全局包&quot;">​</a></h5><p>在 <code>C:\\Users\\用户目录\\AppData\\Roaming\\npm\\node_modules</code>目录下</p><ul><li>工具性质的包，才有全局安装的必要性</li><li>参考官方提供的使用说明</li></ul><h5 id="_3-i5ting-toc" tabindex="-1">３.i5ting_toc <a class="header-anchor" href="#_3-i5ting-toc" aria-label="Permalink to &quot;３.i5ting_toc&quot;">​</a></h5><p>可以把md文档转为html页面的小工具</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">i5ting_toc</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 要转换的md文件路径</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 转换完后使用默认浏览器打开</span></span></code></pre></div><h3 id="_5、规范的包结构" tabindex="-1">5、规范的包结构 <a class="header-anchor" href="#_5、规范的包结构" aria-label="Permalink to &quot;5、规范的包结构&quot;">​</a></h3><p>一个规范的包，它的组成结构，必须符合以下３点要求：</p><ul><li>包必须以单独的目录而存在</li><li>包的顶级目录下要必须包含 这个包管理配置文件</li><li><code>package.json</code> 中必须包含 name，verson，main 这个是三个属性，分别代表包的名字、版本号、包的入口</li></ul><h3 id="_6、开发属于自己的包" tabindex="-1">6、开发属于自己的包 <a class="header-anchor" href="#_6、开发属于自己的包" aria-label="Permalink to &quot;6、开发属于自己的包&quot;">​</a></h3><p>初始化包的基本结构</p><ul><li>新建itheima-tools文件夹，作为包的根目录</li><li>在itheima-tools文件夹中，新建如下三个文件： <ul><li>package.json (包管理配置文件)</li><li>index.js (包的入口文件)</li><li>README.md (包的说明文档)</li></ul></li></ul><h3 id="_7、发布npm包" tabindex="-1">7、发布npm包 <a class="header-anchor" href="#_7、发布npm包" aria-label="Permalink to &quot;7、发布npm包&quot;">​</a></h3>`,47),h=[p];function t(e,k,d,F,r,g){return a(),i("div",null,h)}const y=s(l,[["render",t]]);export{o as __pageData,y as default};
